//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientCenter.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>CcmExec</string>
  <string>WinRM</string>
  <string>wuauserv</string>
  <string>LanmanWorkstation</string>
  <string>LanmanServer</string>
  <string>RemoteRegistry</string>
  <string>BITS</string>
  <string>CmRcService</string>
  <string>Winmgmt</string>
  <string>PeerDistSvc</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection ServicesHighlited {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["ServicesHighlited"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Username {
            get {
                return ((string)(this["Username"]));
            }
            set {
                this["Username"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Password {
            get {
                return ((string)(this["Password"]));
            }
            set {
                this["Password"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("127.0.0.1")]
        public string DefaultHostName {
            get {
                return ((string)(this["DefaultHostName"]));
            }
            set {
                this["DefaultHostName"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"$a = 0
$timespan = New-Object System.TimeSpan(0, 0, 1)
$scope = New-Object System.Management.ManagementScope(""\\.\root\ccm\Events"")
$query = New-Object System.Management.WQLEventQuery(""CCM_Event"", $timespan)
$watcher = New-Object System.Management.ManagementEventWatcher($scope,$query)
do 
    {
        $b = $watcher.WaitForNextEvent()
        $b
    } 
while ($a -ne 1)")]
        public string PSEventQuery {
            get {
                return ((string)(this["PSEventQuery"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>%systemroot%\\system32\\actxprxy.dll</string>\r\n  <string>%systemroot%\\system" +
            "32\\atl.dll</string>\r\n  <string>%systemroot%\\system32\\Bitsprx2.dll</string>\r\n  <s" +
            "tring>%systemroot%\\system32\\Bitsprx3.dll</string>\r\n  <string>%systemroot%\\system" +
            "32\\browseui.dll</string>\r\n  <string>%systemroot%\\system32\\cryptdlg.dll</string>\r" +
            "\n  <string>%systemroot%\\system32\\dssenh.dll</string>\r\n  <string>%systemroot%\\sys" +
            "tem32\\gpkcsp.dll</string>\r\n  <string>%systemroot%\\system32\\initpki.dll</string>\r" +
            "\n  <string>%systemroot%\\system32\\jscript.dll</string>\r\n  <string>%systemroot%\\sy" +
            "stem32\\mshtml.dll</string>\r\n  <string>%systemroot%\\system32\\msi.dll</string>\r\n  " +
            "<string>%systemroot%\\system32\\mssip32.dll</string>\r\n  <string>%systemroot%\\syste" +
            "m32\\msxml.dll</string>\r\n  <string>%systemroot%\\system32\\msxml3.dll</string>\r\n  <" +
            "string>%systemroot%\\system32\\msxml3a.dll</string>\r\n  <string>%systemroot%\\system" +
            "32\\msxml3r.dll</string>\r\n  <string>%systemroot%\\system32\\msxml4.dll</string>\r\n  " +
            "<string>%systemroot%\\system32\\msxml4a.dll</string>\r\n  <string>%systemroot%\\syste" +
            "m32\\msxml4r.dll</string>\r\n  <string>%systemroot%\\system32\\msxml6.dll</string>\r\n " +
            " <string>%systemroot%\\system32\\msxml6r.dll</string>\r\n  <string>%systemroot%\\syst" +
            "em32\\muweb.dll</string>\r\n  <string>%systemroot%\\system32\\ole32.dll</string>\r\n  <" +
            "string>%systemroot%\\system32\\oleaut32.dll</string>\r\n  <string>%systemroot%\\syste" +
            "m32\\Qmgr.dll</string>\r\n  <string>%systemroot%\\system32\\Qmgrprxy.dll</string>\r\n  " +
            "<string>%systemroot%\\system32\\rsaenh.dll</string>\r\n  <string>%systemroot%\\system" +
            "32\\sccbase.dll</string>\r\n  <string>%systemroot%\\system32\\scrrun.dll</string>\r\n  " +
            "<string>%systemroot%\\system32\\shdocvw.dll</string>\r\n  <string>%systemroot%\\syste" +
            "m32\\shell32.dll</string>\r\n  <string>%systemroot%\\system32\\slbcsp.dll</string>\r\n " +
            " <string>%systemroot%\\system32\\softpub.dll</string>\r\n  <string>%systemroot%\\syst" +
            "em32\\urlmon.dll</string>\r\n  <string>%systemroot%\\system32\\userenv.dll</string>\r\n" +
            "  <string>%systemroot%\\system32\\vbscript.dll</string>\r\n  <string>%systemroot%\\sy" +
            "stem32\\Winhttp.dll</string>\r\n  <string>%systemroot%\\system32\\wintrust.dll</strin" +
            "g>\r\n  <string>%systemroot%\\system32\\wuapi.dll</string>\r\n  <string>%systemroot%\\s" +
            "ystem32\\wuaueng.dll</string>\r\n  <string>%systemroot%\\system32\\wuaueng1.dll</stri" +
            "ng>\r\n  <string>%systemroot%\\system32\\wucltui.dll</string>\r\n  <string>%systemroot" +
            "%\\system32\\wucltux.dll</string>\r\n  <string>%systemroot%\\system32\\wups.dll</strin" +
            "g>\r\n  <string>%systemroot%\\system32\\wups2.dll</string>\r\n  <string>%systemroot%\\s" +
            "ystem32\\wuweb.dll</string>\r\n  <string>%systemroot%\\system32\\wuwebv.dll</string>\r" +
            "\n  <string>%systemroot%\\system32\\wbem\\wmisvc.dll</string>\r\n  <string>%systemroot" +
            "%\\system32\\Xpob2res.dll</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection RegisterDLLs {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["RegisterDLLs"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("O:BAG:BAD:(A;;CCDCSW;;;WD)(A;;CCDCLCSWRP;;;BA)(A;;CCDCLCSWRP;;;LU)(A;;CCDCLCSWRP;" +
            ";;S-1-5-32-562)")]
        public string MachineLaunchRestriction {
            get {
                return ((string)(this["MachineLaunchRestriction"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("O:BAG:BAD:(A;;CCDCLC;;;WD)(A;;CCDCLC;;;LU)(A;;CCDCLC;;;S-1-5-32-562)(A;;CCDCLC;;;" +
            "AN)")]
        public string MachineAccessRestriction {
            get {
                return ((string)(this["MachineAccessRestriction"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("O:BAG:BAD:(A;;CCDCLCSWRP;;;SY)(A;;CCDCLCSWRP;;;BA)(A;;CCDCLCSWRP;;;IU)")]
        public string DefaultLaunchPermission {
            get {
                return ((string)(this["DefaultLaunchPermission"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool NoLocalAdminCheck {
            get {
                return ((bool)(this["NoLocalAdminCheck"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5985")]
        public string WinRMPort {
            get {
                return ((string)(this["WinRMPort"]));
            }
            set {
                this["WinRMPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool WinRMSSL {
            get {
                return ((bool)(this["WinRMSSL"]));
            }
            set {
                this["WinRMSSL"] = value;
            }
        }
    }
}
